[{"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx":"1","C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts":"2","C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx":"3","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts":"4","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts":"5","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts":"6","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts":"7","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts":"8","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts":"9","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts":"10","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts":"11","C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx":"12","C:\\Users\\Lukas\\Desktop\\ego\\src\\UI.tsx":"13","C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx":"14","C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx":"15","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx":"16"},{"size":1126,"mtime":1608676977696,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1978,"mtime":1608808252862,"results":"20","hashOfConfig":"18"},{"size":6815,"mtime":1608559090784,"results":"21","hashOfConfig":"18"},{"size":1469,"mtime":1608714477605,"results":"22","hashOfConfig":"18"},{"size":2604,"mtime":1608558996718,"results":"23","hashOfConfig":"18"},{"size":2188,"mtime":1608559015942,"results":"24","hashOfConfig":"18"},{"size":12453,"mtime":1608745446619,"results":"25","hashOfConfig":"18"},{"size":11270,"mtime":1608751164487,"results":"26","hashOfConfig":"18"},{"size":1005,"mtime":1608741651193,"results":"27","hashOfConfig":"18"},{"size":387,"mtime":1608733723892,"results":"28","hashOfConfig":"18"},{"size":9698,"mtime":1608752701219,"results":"29","hashOfConfig":"18"},{"size":2311,"mtime":1608752422331,"results":"30","hashOfConfig":"18"},{"size":5042,"mtime":1608802709039,"results":"31","hashOfConfig":"18"},{"size":1092,"mtime":1608809076776,"results":"32","hashOfConfig":"18"},{"size":623,"mtime":1608802832547,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1m8gn3d",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx",[],["71","72"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx",["73"],"import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport Matrix from \"./objects/DependencyMatrix\";\r\nimport { Graph } from \"./Graph\";\r\nimport Node from \"./objects/Node\";\r\nimport Network from \"./objects/Network\";\r\nimport { Context } from \".\";\r\nimport { reaction } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UI } from \"./UI\";\r\nimport { ZoneItem } from \"./ZoneItem\";\r\nimport { Box, ChakraProvider, Flex, Stack } from \"@chakra-ui/react\";\r\nimport { LeftPanel } from \"./LeftPanel\";\r\nimport { RightPanel } from \"./RightPanel\";\r\n\r\nfunction App() {\r\n  const context = useContext(Context);\r\n\r\n  reaction(\r\n    () => context.network.Network,\r\n    (Network) => {\r\n      console.log(Network);\r\n    }\r\n  );\r\n\r\n  const App = observer(() => {\r\n    return (\r\n      <div className=\"App\">\r\n        {!context.network.Network && (\r\n          <CSVReader\r\n            onFileLoaded={(data, fileInfo) => {\r\n              const network = new Network([], []);\r\n              console.log(fileInfo);\r\n              for (let i = 0; i < data.length; i++) {\r\n                const element = data[i];\r\n                network.addEdge(\r\n                  new Node(element[0]),\r\n                  new Node(element[1]),\r\n                  Number.parseFloat(element[2])\r\n                );\r\n              }\r\n              new Matrix(network).nodesDependency();\r\n              context.network.Network = network;\r\n            }}\r\n          />\r\n        )}\r\n        {context.network.Network && (\r\n          <div>\r\n            <UI />\r\n            <Stack>\r\n              <Flex>\r\n                <LeftPanel />\r\n                <Box flex={1}>\r\n                    <Graph />\r\n                </Box>\r\n                <RightPanel />\r\n              </Flex>\r\n            </Stack>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\UI.tsx",["74","75","76"],"import React, { useContext } from \"react\";\r\nimport Zone from \"./objects/Zone\";\r\nimport { Stack, Button, Checkbox, Select } from \"@chakra-ui/react\";\r\nimport { ZoneItem } from \"./ZoneItem\";\r\nimport { Context, networkStore, settingsStore, zoneStore } from \".\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport const UI: React.FunctionComponent = () => {\r\n  const context = useContext(Context);\r\n\r\n  return (\r\n    <Stack zIndex={1} mt={5}>\r\n      <Stack isInline={true}>\r\n        <Button\r\n          onClick={() => {\r\n            networkStore.Network?.Nodes.forEach((n) => {\r\n              if (n.isProminent() === 0) {\r\n                const z = new Zone(n);\r\n                zoneStore.AddZone(z);\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          Strongly prominent nodes\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            networkStore.Network?.Nodes.forEach((n) => {\r\n              if (n.isProminent() === 1) {\r\n                const z = new Zone(n);\r\n                zoneStore.AddZone(z);\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          Weakly prominent nodes\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            zoneStore.ClearZones();\r\n          }}\r\n        >\r\n          Clear zones\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            // layout\r\n          }}\r\n        >\r\n          Layout\r\n        </Button>\r\n\r\n        <Select\r\n          width={100}\r\n          onChange={(e) => {\r\n            settingsStore.Duplicates = e.target.value;\r\n          }}\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"me\">Mutli-ego</option>\r\n          <option value=\"de\">Duplicates</option>\r\n        </Select>\r\n\r\n        <Checkbox\r\n          defaultIsChecked={false}\r\n          onChange={(e) => {\r\n            settingsStore.Automove = e.target.checked;\r\n          }}\r\n        >\r\n          Move zone\r\n        </Checkbox>\r\n\r\n        <Checkbox\r\n          defaultIsChecked={false}\r\n          onChange={(e) => {\r\n            if (e.target.checked) {\r\n              settingsStore.ZIndex = 0;\r\n            } else {\r\n              settingsStore.ZIndex = -1;\r\n            }\r\n          }}\r\n        >\r\n          Z-index\r\n        </Checkbox>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx",["77","78","79","80","81","82"],"import {\r\n  Button,\r\n  Heading,\r\n  ListItem,\r\n  Stack,\r\n  UnorderedList,\r\n} from \"@chakra-ui/react\";\r\nimport react from \"react\";\r\nimport { Flex, Spacer, Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport const LeftPanel: React.FunctionComponent = () => {\r\n  return (\r\n    <Stack p={5} w={\"10em\"}>\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Basic\r\n      </Heading>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Groups\r\n      </Button>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Nodes\r\n      </Button>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Edges\r\n      </Button>\r\n\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Zones\r\n      </Heading>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Groups\r\n      </Button>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Nodes\r\n      </Button>\r\n      <Button isFullWidth={true} colorScheme=\"teal\" variant=\"ghost\">\r\n        Edges\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx",["83","84","85"],"import { Stack } from \"@chakra-ui/react\";\r\nimport react from \"react\";\r\nimport { Flex, Spacer, Box } from \"@chakra-ui/react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { zoneStore } from \".\";\r\nimport { ZoneItem } from \"./ZoneItem\";\r\n\r\nexport const RightPanel: React.FunctionComponent = () => {\r\n  const Zones = observer(() => (\r\n    <div>\r\n      {zoneStore.Zones.map((z, i) => {\r\n        return <ZoneItem zone={z} key={i}></ZoneItem>;\r\n      })}\r\n    </div>\r\n  ));\r\n  return (\r\n    <Stack overflowY={\"scroll\"} height={\"90vh\"} width={\"15vw\"}>\r\n      <Box>\r\n        <Zones />\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":12,"column":10,"nodeType":"92","messageId":"93","endLine":12,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":18},{"ruleId":"90","severity":1,"message":"95","line":9,"column":9,"nodeType":"92","messageId":"93","endLine":9,"endColumn":16},{"ruleId":"90","severity":1,"message":"96","line":4,"column":3,"nodeType":"92","messageId":"93","endLine":4,"endColumn":11},{"ruleId":"90","severity":1,"message":"97","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":14},{"ruleId":"90","severity":1,"message":"100","line":9,"column":16,"nodeType":"92","messageId":"93","endLine":9,"endColumn":22},{"ruleId":"90","severity":1,"message":"101","line":9,"column":24,"nodeType":"92","messageId":"93","endLine":9,"endColumn":27},{"ruleId":"90","severity":1,"message":"98","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"100","line":3,"column":16,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'ZoneItem' is defined but never used.","Identifier","unusedVar","'observer' is defined but never used.","'context' is assigned a value but never used.","'ListItem' is defined but never used.","'UnorderedList' is defined but never used.","'react' is defined but never used.","'Flex' is defined but never used.","'Spacer' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation"]