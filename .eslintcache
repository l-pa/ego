[{"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx":"1","C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts":"2","C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx":"3","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts":"4","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts":"5","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts":"6","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts":"7","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts":"8","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts":"9","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts":"10","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts":"11","C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx":"12","C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx":"13","C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx":"14","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx":"15","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicZones.tsx":"16","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicEdges.tsx":"17","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicNodes.tsx":"18","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\zones\\ZonesIntersect.tsx":"19","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Vector.ts":"20","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicLayout.tsx":"21"},{"size":1126,"mtime":1608676977696,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2075,"mtime":1609088991702,"results":"25","hashOfConfig":"23"},{"size":6815,"mtime":1608559090784,"results":"26","hashOfConfig":"23"},{"size":1469,"mtime":1608714477605,"results":"27","hashOfConfig":"23"},{"size":2604,"mtime":1608558996718,"results":"28","hashOfConfig":"23"},{"size":2332,"mtime":1609340295838,"results":"29","hashOfConfig":"23"},{"size":16051,"mtime":1609347881980,"results":"30","hashOfConfig":"23"},{"size":11584,"mtime":1609354245809,"results":"31","hashOfConfig":"23"},{"size":1673,"mtime":1609348703974,"results":"32","hashOfConfig":"23"},{"size":566,"mtime":1609342079132,"results":"33","hashOfConfig":"23"},{"size":9886,"mtime":1609347640294,"results":"34","hashOfConfig":"23"},{"size":5042,"mtime":1608802709039,"results":"35","hashOfConfig":"23"},{"size":2812,"mtime":1609087601186,"results":"36","hashOfConfig":"23"},{"size":1415,"mtime":1609347219029,"results":"37","hashOfConfig":"23"},{"size":2304,"mtime":1609348714759,"results":"38","hashOfConfig":"23"},{"size":90,"mtime":1608977705664,"results":"39","hashOfConfig":"23"},{"size":516,"mtime":1609351121286,"results":"40","hashOfConfig":"23"},{"size":449,"mtime":1609020253041,"results":"41","hashOfConfig":"23"},{"size":1577,"mtime":1609099085121,"results":"42","hashOfConfig":"23"},{"size":883,"mtime":1609088398788,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1m8gn3d",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx",[],["91","92"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx",["93"],"import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport Matrix from \"./objects/DependencyMatrix\";\r\nimport { Graph } from \"./Graph\";\r\nimport Node from \"./objects/Node\";\r\nimport Network from \"./objects/Network\";\r\nimport { Context } from \".\";\r\nimport { reaction } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ZoneItem } from \"./ZoneItem\";\r\nimport { Box, ChakraProvider, Divider, Flex, Stack } from \"@chakra-ui/react\";\r\nimport { LeftPanel } from \"./LeftPanel\";\r\nimport { RightPanel } from \"./RightPanel\";\r\n\r\nfunction App() {\r\n  const context = useContext(Context);\r\n\r\n  reaction(\r\n    () => context.network.Network,\r\n    (Network) => {\r\n      console.log(Network);\r\n    }\r\n  );\r\n\r\n  const App = observer(() => {\r\n    return (\r\n      <div className=\"App\">\r\n        {!context.network.Network && (\r\n          <CSVReader\r\n            onFileLoaded={(data, fileInfo) => {\r\n              const network = new Network([], []);\r\n              console.log(fileInfo);\r\n              for (let i = 0; i < data.length; i++) {\r\n                const element = data[i];\r\n                network.addEdge(\r\n                  new Node(element[0]),\r\n                  new Node(element[1]),\r\n                  Number.parseFloat(element[2])\r\n                );\r\n              }\r\n              new Matrix(network).nodesDependency();\r\n              context.network.Network = network;\r\n            }}\r\n          />\r\n        )}\r\n        {context.network.Network && (\r\n          <div>\r\n            <Stack>\r\n              <Flex>\r\n                <LeftPanel />\r\n                <Divider height={\"100vh\"} orientation=\"vertical\" />\r\n                <Box flex={1}>\r\n                  <Graph />\r\n                </Box>\r\n                <Divider height={\"100vh\"} orientation=\"vertical\" />\r\n                <RightPanel />\r\n              </Flex>\r\n            </Stack>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts",["94"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx",["95","96","97","98","99","100","101","102","103"],"import {\r\n  Button,\r\n  Heading,\r\n  ListItem,\r\n  Stack,\r\n  UnorderedList,\r\n} from \"@chakra-ui/react\";\r\nimport react, { useState, useRef, useEffect, createRef } from \"react\";\r\nimport { Flex, Spacer, Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { settingsStore } from \".\";\r\n\r\nexport const LeftPanel: React.FunctionComponent = () => {\r\n  const [activeOption, setActiveOption] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(activeOption);\r\n  }, [activeOption]);\r\n\r\n  return (\r\n    <Stack p={5} w={\"10em\"}>\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Basic\r\n      </Heading>\r\n      <Button\r\n        isActive={true}\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={(e) => {\r\n          settingsStore.SelectedOption = \"basicZones\";\r\n        }}\r\n      >\r\n        Zones\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicNodes\";\r\n        }}\r\n      >\r\n        Nodes\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicEdges\";\r\n        }}\r\n      >\r\n        Edges\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicLayout\";\r\n        }}\r\n      >\r\n        Layout\r\n      </Button>\r\n\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Zones\r\n      </Heading>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesMax\";\r\n        }}\r\n      >\r\n        Max\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesMin\";\r\n        }}\r\n      >\r\n        Min\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesSubzone\";\r\n        }}\r\n      >\r\n        Subzone\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesSuperzone\";\r\n        }}\r\n      >\r\n        Superzone\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesIntersect\";\r\n        }}\r\n      >\r\n        Intersect\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx",["104","105","106","107","108","109","110"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicZones.tsx",["111","112"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicEdges.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicNodes.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\zones\\ZonesIntersect.tsx",["113","114","115","116"],"import { Button, Select, Stack, Text } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { zoneStore } from \"../..\";\r\n\r\nexport function ZonesIntersect() {\r\n  const [z, setZ] = useState([]);\r\n  return (\r\n    <Stack>\r\n      <Select placeholder=\"None\" onChange={(e) => {}}>\r\n        {zoneStore.Zones.map((z, i) => {\r\n          return <option value={i}>{z.Ego.Id}</option>;\r\n        })}\r\n      </Select>\r\n    </Stack>\r\n  );\r\n}\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Vector.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicLayout.tsx",["117","118"],"import { Button, Divider, Select, Spacer } from \"@chakra-ui/react\";\r\nimport React, { useRef } from \"react\";\r\nimport { cy } from \"../../Graph\";\r\n\r\nexport function BasicLayout() {\r\n  const layoutRef = useRef<HTMLSelectElement>(null);\r\n  return (\r\n    <div>\r\n      <Select ref={layoutRef} mb={5} placeholder=\"Select layout\">\r\n        <option value=\"cola\">Cola</option>\r\n        <option value=\"random\">Random</option>\r\n      </Select>\r\n\r\n      <Button\r\n        isFullWidth={true}\r\n        onClick={() => {\r\n          switch (layoutRef.current?.value) {\r\n            case \"cola\":\r\n              cy.layout({ name: \"cola\" }).run();\r\n              break;\r\n            case \"random\":\r\n              cy.layout({ name: \"random\" }).run();\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }}\r\n      >\r\n        Apply\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":11,"column":10,"nodeType":"125","messageId":"126","endLine":11,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":5,"column":3,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"123","severity":1,"message":"128","line":4,"column":3,"nodeType":"125","messageId":"126","endLine":4,"endColumn":11},{"ruleId":"123","severity":1,"message":"129","line":6,"column":3,"nodeType":"125","messageId":"126","endLine":6,"endColumn":16},{"ruleId":"123","severity":1,"message":"130","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"131","line":8,"column":27,"nodeType":"125","messageId":"126","endLine":8,"endColumn":33},{"ruleId":"123","severity":1,"message":"132","line":8,"column":46,"nodeType":"125","messageId":"126","endLine":8,"endColumn":55},{"ruleId":"123","severity":1,"message":"133","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":9,"column":16,"nodeType":"125","messageId":"126","endLine":9,"endColumn":22},{"ruleId":"123","severity":1,"message":"135","line":9,"column":24,"nodeType":"125","messageId":"126","endLine":9,"endColumn":27},{"ruleId":"123","severity":1,"message":"136","line":14,"column":24,"nodeType":"125","messageId":"126","endLine":14,"endColumn":39},{"ruleId":"123","severity":1,"message":"130","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":13},{"ruleId":"123","severity":1,"message":"137","line":2,"column":17,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"133","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":3,"column":16,"nodeType":"125","messageId":"126","endLine":3,"endColumn":22},{"ruleId":"123","severity":1,"message":"138","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":17},{"ruleId":"123","severity":1,"message":"139","line":5,"column":34,"nodeType":"125","messageId":"126","endLine":5,"endColumn":43},{"ruleId":"123","severity":1,"message":"124","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":18},{"ruleId":"123","severity":1,"message":"134","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":9},{"ruleId":"123","severity":1,"message":"140","line":16,"column":9,"nodeType":"125","messageId":"126","endLine":16,"endColumn":16},{"ruleId":"123","severity":1,"message":"141","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":16},{"ruleId":"123","severity":1,"message":"142","line":1,"column":33,"nodeType":"125","messageId":"126","endLine":1,"endColumn":37},{"ruleId":"123","severity":1,"message":"143","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":11},{"ruleId":"123","severity":1,"message":"144","line":6,"column":13,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"145","line":1,"column":18,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"134","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":41},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'ZoneItem' is defined but never used.","Identifier","unusedVar","'CytoscapeOptions' is defined but never used.","'ListItem' is defined but never used.","'UnorderedList' is defined but never used.","'react' is defined but never used.","'useRef' is defined but never used.","'createRef' is defined but never used.","'Flex' is defined but never used.","'Spacer' is defined but never used.","'Box' is defined but never used.","'setActiveOption' is assigned a value but never used.","'useContext' is defined but never used.","'Context' is defined but never used.","'zoneStore' is defined but never used.","'context' is assigned a value but never used.","'Button' is defined but never used.","'Text' is defined but never used.","'z' is assigned a value but never used.","'setZ' is assigned a value but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]