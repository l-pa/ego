[{"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx":"1","C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts":"2","C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx":"3","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts":"4","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts":"5","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts":"6","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts":"7","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts":"8","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts":"9","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts":"10","C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts":"11","C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx":"12","C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx":"13","C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx":"14","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx":"15","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicZones.tsx":"16","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicEdges.tsx":"17","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicNodes.tsx":"18","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\zones\\ZonesIntersect.tsx":"19","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Vector.ts":"20","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicLayout.tsx":"21"},{"size":1126,"mtime":1608676977696,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2075,"mtime":1609088991702,"results":"25","hashOfConfig":"23"},{"size":6815,"mtime":1608559090784,"results":"26","hashOfConfig":"23"},{"size":1469,"mtime":1608714477605,"results":"27","hashOfConfig":"23"},{"size":2604,"mtime":1608558996718,"results":"28","hashOfConfig":"23"},{"size":2188,"mtime":1608559015942,"results":"29","hashOfConfig":"23"},{"size":12595,"mtime":1609085123186,"results":"30","hashOfConfig":"23"},{"size":11270,"mtime":1608751164487,"results":"31","hashOfConfig":"23"},{"size":1287,"mtime":1609077180442,"results":"32","hashOfConfig":"23"},{"size":387,"mtime":1608733723892,"results":"33","hashOfConfig":"23"},{"size":9771,"mtime":1609088334020,"results":"34","hashOfConfig":"23"},{"size":5042,"mtime":1608802709039,"results":"35","hashOfConfig":"23"},{"size":2812,"mtime":1609087601186,"results":"36","hashOfConfig":"23"},{"size":1628,"mtime":1609087586278,"results":"37","hashOfConfig":"23"},{"size":2319,"mtime":1609076816570,"results":"38","hashOfConfig":"23"},{"size":90,"mtime":1608977705664,"results":"39","hashOfConfig":"23"},{"size":90,"mtime":1608977711783,"results":"40","hashOfConfig":"23"},{"size":449,"mtime":1609020253041,"results":"41","hashOfConfig":"23"},{"size":441,"mtime":1609077073426,"results":"42","hashOfConfig":"23"},{"size":883,"mtime":1609088398788,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1m8gn3d",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},"C:\\Users\\Lukas\\Desktop\\ego\\src\\index.tsx",[],["92","93"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\reportWebVitals.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\App.tsx",["94"],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\DependencyMatrix.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Network.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Node.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Edge.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Zone.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\ZoneStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\SettingsStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\stores\\NetworkStore.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\Graph.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\ZoneItem.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\LeftPanel.tsx",["95","96","97","98","99","100","101","102","103"],"import {\r\n  Button,\r\n  Heading,\r\n  ListItem,\r\n  Stack,\r\n  UnorderedList,\r\n} from \"@chakra-ui/react\";\r\nimport react, { useState, useRef, useEffect, createRef } from \"react\";\r\nimport { Flex, Spacer, Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { settingsStore } from \".\";\r\n\r\nexport const LeftPanel: React.FunctionComponent = () => {\r\n  const [activeOption, setActiveOption] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(activeOption);\r\n  }, [activeOption]);\r\n\r\n  return (\r\n    <Stack p={5} w={\"10em\"}>\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Basic\r\n      </Heading>\r\n      <Button\r\n        isActive={true}\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={(e) => {\r\n          settingsStore.SelectedOption = \"basicZones\";\r\n        }}\r\n      >\r\n        Zones\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicNodes\";\r\n        }}\r\n      >\r\n        Nodes\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicEdges\";\r\n        }}\r\n      >\r\n        Edges\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"basicLayout\";\r\n        }}\r\n      >\r\n        Layout\r\n      </Button>\r\n\r\n      <Heading as=\"h5\" size=\"sm\">\r\n        Zones\r\n      </Heading>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesMax\";\r\n        }}\r\n      >\r\n        Max\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesMin\";\r\n        }}\r\n      >\r\n        Min\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesSubzone\";\r\n        }}\r\n      >\r\n        Subzone\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesSuperzone\";\r\n        }}\r\n      >\r\n        Superzone\r\n      </Button>\r\n      <Button\r\n        isFullWidth={true}\r\n        colorScheme=\"teal\"\r\n        variant=\"ghost\"\r\n        onClick={() => {\r\n          settingsStore.SelectedOption = \"zonesIntersect\";\r\n        }}\r\n      >\r\n        Intersect\r\n      </Button>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\RightPanel.tsx",["104","105","106","107","108"],"import { Stack } from \"@chakra-ui/react\";\r\nimport react, { useContext } from \"react\";\r\nimport { Flex, Spacer, Box } from \"@chakra-ui/react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context, settingsStore, zoneStore } from \".\";\r\nimport { ZoneItem } from \"./ZoneItem\";\r\nimport { BasicZones } from \"./settings/basic/BasicZones\";\r\nimport { BasicEdges } from \"./settings/basic/BasicEdges\";\r\nimport { BasicNodes } from \"./settings/basic/BasicNodes\";\r\nimport { ZonesIntersect } from \"./settings/zones/ZonesIntersect\";\r\nimport { BasicLayout } from \"./settings/basic/BasicLayout\";\r\n\r\n\r\nexport const RightPanel: React.FunctionComponent = () => {\r\n\r\n  const context = useContext(Context);\r\n\r\n  const Zones = observer(() => (\r\n    <div>\r\n      {zoneStore.Zones.map((z, i) => {\r\n        return <ZoneItem zone={z} key={i}></ZoneItem>;\r\n      })}\r\n    </div>\r\n  ));\r\n\r\n  const Settings = observer(() => (\r\n    <Stack zIndex={1} mt={5}>\r\n      {(() => {\r\n        switch (settingsStore.SelectedOption) {\r\n          case \"basicZones\":\r\n            return <BasicZones />;\r\n          case \"basicNodes\":\r\n            return <BasicNodes />;\r\n          case \"basicEdges\":\r\n            return <BasicEdges />;\r\n          case \"basicLayout\":\r\n            return <BasicLayout />;\r\n          case \"zonesIntersect\":\r\n            return <ZonesIntersect />;\r\n          default:\r\n            return <p>None</p>;\r\n        }\r\n      })()}\r\n    </Stack>\r\n  ));\r\n\r\n\r\n  return (\r\n    <Stack overflowY={\"scroll\"} height={\"90vh\"} width={\"15vw\"} p={5}>\r\n      <Box>\r\n        <Settings />\r\n        {/* <Zones /> */}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicZones.tsx",["109","110","111","112","113"],"import React, { useContext } from \"react\";\r\nimport Zone from \"../../objects/Zone\";\r\nimport {\r\n  Stack,\r\n  Button,\r\n  Checkbox,\r\n  Select,\r\n  Spacer,\r\n  Divider,\r\n} from \"@chakra-ui/react\";\r\nimport { ZoneItem } from \"../../ZoneItem\";\r\nimport { Context, networkStore, settingsStore, zoneStore } from \"../../.\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport const BasicZones: React.FunctionComponent = () => {\r\n  const context = useContext(Context);\r\n\r\n  return (\r\n    <Stack>\r\n      <Button\r\n        onClick={() => {\r\n          networkStore.Network?.Nodes.forEach((n) => {\r\n            if (n.isProminent() === 0) {\r\n              const z = new Zone(n);\r\n              zoneStore.AddZone(z);\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        Strongly prominent\r\n      </Button>\r\n\r\n      <Button\r\n        onClick={() => {\r\n          networkStore.Network?.Nodes.forEach((n) => {\r\n            if (n.isProminent() === 1) {\r\n              const z = new Zone(n);\r\n              zoneStore.AddZone(z);\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        Weakly prominent\r\n      </Button>\r\n      <Button\r\n        colorScheme={\"red\"}\r\n        onClick={() => {\r\n          zoneStore.ClearZones();\r\n        }}\r\n      >\r\n        Clear zones\r\n      </Button>\r\n      <Select\r\n        isFullWidth={true}\r\n        onChange={(e) => {\r\n          settingsStore.Duplicates = e.target.value;\r\n        }}\r\n      >\r\n        <option value=\"all\">All</option>\r\n        <option value=\"me\">Mutli-ego</option>\r\n        <option value=\"de\">Duplicates</option>\r\n      </Select>\r\n\r\n      <Checkbox\r\n        defaultIsChecked={settingsStore.Automove}\r\n        onChange={(e) => {\r\n          settingsStore.Automove = e.target.checked;\r\n        }}\r\n      >\r\n        Move zone\r\n      </Checkbox>\r\n\r\n      <Checkbox\r\n        defaultIsChecked={true}\r\n        onChange={(e) => {\r\n          if (e.target.checked) {\r\n            settingsStore.ZIndex = 0;\r\n          } else {\r\n            settingsStore.ZIndex = -1;\r\n          }\r\n        }}\r\n      >\r\n        Z-index\r\n      </Checkbox>\r\n\r\n      <Checkbox\r\n        defaultIsChecked={settingsStore.QuadraticCurves}\r\n        onChange={(e) => {\r\n          settingsStore.QuadraticCurves = e.target.checked;\r\n        }}\r\n      >\r\n        Quadratic curves\r\n      </Checkbox>\r\n    </Stack>\r\n  );\r\n};\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicEdges.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicNodes.tsx",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\zones\\ZonesIntersect.tsx",["114","115","116","117"],"import { Button, Select, Stack, Text } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { zoneStore } from \"../..\";\r\n\r\nexport function ZonesIntersect() {\r\n  const [z, setZ] = useState([]);\r\n  return (\r\n    <Stack>\r\n      <Select placeholder=\"None\" onChange={(e) => {}}>\r\n        {zoneStore.Zones.map((z, i) => {\r\n          return <option value={i}>{z.Ego.Id}</option>;\r\n        })}\r\n      </Select>\r\n    </Stack>\r\n  );\r\n}\r\n","C:\\Users\\Lukas\\Desktop\\ego\\src\\objects\\Vector.ts",[],"C:\\Users\\Lukas\\Desktop\\ego\\src\\settings\\basic\\BasicLayout.tsx",["118","119"],"import { Button, Divider, Select, Spacer } from \"@chakra-ui/react\";\r\nimport React, { useRef } from \"react\";\r\nimport { cy } from \"../../Graph\";\r\n\r\nexport function BasicLayout() {\r\n  const layoutRef = useRef<HTMLSelectElement>(null);\r\n  return (\r\n    <div>\r\n      <Select ref={layoutRef} mb={5} placeholder=\"Select layout\">\r\n        <option value=\"cola\">Cola</option>\r\n        <option value=\"random\">Random</option>\r\n      </Select>\r\n\r\n      <Button\r\n        isFullWidth={true}\r\n        onClick={() => {\r\n          switch (layoutRef.current?.value) {\r\n            case \"cola\":\r\n              cy.layout({ name: \"cola\" }).run();\r\n              break;\r\n            case \"random\":\r\n              cy.layout({ name: \"random\" }).run();\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }}\r\n      >\r\n        Apply\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":18},{"ruleId":"124","severity":1,"message":"128","line":4,"column":3,"nodeType":"126","messageId":"127","endLine":4,"endColumn":11},{"ruleId":"124","severity":1,"message":"129","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"130","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":13},{"ruleId":"124","severity":1,"message":"131","line":8,"column":27,"nodeType":"126","messageId":"127","endLine":8,"endColumn":33},{"ruleId":"124","severity":1,"message":"132","line":8,"column":46,"nodeType":"126","messageId":"127","endLine":8,"endColumn":55},{"ruleId":"124","severity":1,"message":"133","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":14},{"ruleId":"124","severity":1,"message":"134","line":9,"column":16,"nodeType":"126","messageId":"127","endLine":9,"endColumn":22},{"ruleId":"124","severity":1,"message":"135","line":9,"column":24,"nodeType":"126","messageId":"127","endLine":9,"endColumn":27},{"ruleId":"124","severity":1,"message":"136","line":14,"column":24,"nodeType":"126","messageId":"127","endLine":14,"endColumn":39},{"ruleId":"124","severity":1,"message":"130","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"133","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"134","line":3,"column":16,"nodeType":"126","messageId":"127","endLine":3,"endColumn":22},{"ruleId":"124","severity":1,"message":"137","line":16,"column":9,"nodeType":"126","messageId":"127","endLine":16,"endColumn":16},{"ruleId":"124","severity":1,"message":"138","line":18,"column":9,"nodeType":"126","messageId":"127","endLine":18,"endColumn":14},{"ruleId":"124","severity":1,"message":"134","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":9},{"ruleId":"124","severity":1,"message":"139","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":10},{"ruleId":"124","severity":1,"message":"125","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":18},{"ruleId":"124","severity":1,"message":"140","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":18},{"ruleId":"124","severity":1,"message":"137","line":16,"column":9,"nodeType":"126","messageId":"127","endLine":16,"endColumn":16},{"ruleId":"124","severity":1,"message":"141","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":16},{"ruleId":"124","severity":1,"message":"142","line":1,"column":33,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},{"ruleId":"124","severity":1,"message":"143","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":11},{"ruleId":"124","severity":1,"message":"144","line":6,"column":13,"nodeType":"126","messageId":"127","endLine":6,"endColumn":17},{"ruleId":"124","severity":1,"message":"139","line":1,"column":18,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"134","line":1,"column":35,"nodeType":"126","messageId":"127","endLine":1,"endColumn":41},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"@typescript-eslint/no-unused-vars","'ZoneItem' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'UnorderedList' is defined but never used.","'react' is defined but never used.","'useRef' is defined but never used.","'createRef' is defined but never used.","'Flex' is defined but never used.","'Spacer' is defined but never used.","'Box' is defined but never used.","'setActiveOption' is assigned a value but never used.","'context' is assigned a value but never used.","'Zones' is assigned a value but never used.","'Divider' is defined but never used.","'observer' is defined but never used.","'Button' is defined but never used.","'Text' is defined but never used.","'z' is assigned a value but never used.","'setZ' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]